@inject IStringLocalizer<App> Loc
@page "/availabilities"
@attribute [Authorize(Roles = "Doctor, LocalAdmin")]

<h3>Availabilities</h3>

@if (doctorsInCurrentUserLocation != null && doctorsInCurrentUserLocation.Any())
{
    <label for="doctorId">@Loc[nameof(ResourceStrings.AvailabilitiesPageDoctorText)]</label>
    <select class="form-control" @bind="selectedDoctorId">
        <option value="">@Loc[nameof(ResourceStrings.AvailabilitiesPageChoosePlacer)]</option>

        @foreach (var doctor in doctorsInCurrentUserLocation)
        {
            <option value="@doctor.Id">@($"{doctor.Name} {doctor.Surname}")</option>
        }

    </select>


    <button class="btn btn-primary btn-sm" @onclick="GetAvailabilitiesByDoctorId">@Loc[nameof(ResourceStrings.AvailabilitiesPageGetAvailabilityButton)]</button>
    <button class="btn btn-success btn-sm" @onclick="NavigateToCreateAvailability">@Loc[nameof(ResourceStrings.AvailabilitiesPageCreateAvailabilityButton)]</button>
    <button class="btn btn-danger btn-sm" @onclick="DeleteAvailabilities">@Loc[nameof(ResourceStrings.AvailabilitiesPageDeleteSelectedButton)]</button>
}
@if (isLoading)
{
    <p>@Loc[nameof(ResourceStrings.AvailabilitiesPageLoadingText)]</p>
}

else if (availabilities != null && availabilities.Any())
{
    <table class="table mt-4">
        <thead>
            <tr>
                <th><input type="checkbox" @bind="selectAll" @onclick="ToggleSelectAll" /></th>
                <th>@Loc[nameof(ResourceStrings.AvailabilitiesPageTableDoctor)]</th>
                <th>@Loc[nameof(ResourceStrings.AvailabilitiesPageTableDate)]</th>
                <th>@Loc[nameof(ResourceStrings.AvailabilitiesPageTableStartHour)]</th>
                <th>@Loc[nameof(ResourceStrings.AvailabilitiesPageTableEndHour)]</th>
                <th>@Loc[nameof(ResourceStrings.AvailabilitiesPageTableOperations)]</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var availability in availabilities)
            {
                if (!availabilityCheckboxes.ContainsKey(availability.Id))
                {
                    availabilityCheckboxes[availability.Id] = false;
                }

                <tr>
                    <td><input type="checkbox" @bind="availabilityCheckboxes[availability.Id]" /></td>
                    <td>@($"{availability.Doctor.Name} {availability.Doctor.Surname}")</td>
                    <td>@availability.Date.ToShortDateString()</td>
                    <td>@availability.StartTime.ToString()</td>
                    <td>@availability.EndTime.ToString()</td>
                    <td>
                        <button class="btn btn-danger btn-sm" @onclick="() => DeleteAvailability(availability)">@Loc[nameof(ResourceStrings.AvailabilitiesPageDeleteOnlyButton)]</button>
                        <button class="btn btn-info btn-sm" @onclick="() => NavigateToEditAvailability(availability.Id)">@Loc[nameof(ResourceStrings.AvailabilitiesPageEditButton)]</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else if (availabilities != null && !availabilities.Any())
{
    <p>@Loc[nameof(ResourceStrings.AvailabilitiesPageNoAvailabilityText)]</p>
}

@if (authenticationState!= null)
{
    @if (authenticationState.User?.Claims != null)
    {
        var registrationNumberClaim = authenticationState.User.Claims.FirstOrDefault(c => c.Type == "RegistrationNumber");
    }
}

