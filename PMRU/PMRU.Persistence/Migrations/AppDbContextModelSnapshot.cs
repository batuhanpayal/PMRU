// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PMRU.Persistence.Context;

#nullable disable

namespace PMRU.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PMRU.Domain.Entities.Appointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AppointmentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AppointmentHour")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DoctorID")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DoctorID");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("PMRU.Domain.Entities.Availability", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Day")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DoctorID")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.HasIndex("DoctorID");

                    b.ToTable("Availabilities");
                });

            modelBuilder.Entity("PMRU.Domain.Entities.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DepartmentDescription")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 12, 27, 12, 21, 56, 600, DateTimeKind.Local).AddTicks(3902),
                            DepartmentDescription = "Güvenlik",
                            IsActive = false,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 12, 27, 12, 21, 56, 600, DateTimeKind.Local).AddTicks(3916),
                            DepartmentDescription = "Üretim",
                            IsActive = false,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2023, 12, 27, 12, 21, 56, 600, DateTimeKind.Local).AddTicks(3918),
                            DepartmentDescription = "Finans",
                            IsActive = false,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2023, 12, 27, 12, 21, 56, 600, DateTimeKind.Local).AddTicks(3920),
                            DepartmentDescription = "İnsan Kaynakları",
                            IsActive = false,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2023, 12, 27, 12, 21, 56, 600, DateTimeKind.Local).AddTicks(3921),
                            DepartmentDescription = "Satış Pazarlama",
                            IsActive = false,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2023, 12, 27, 12, 21, 56, 600, DateTimeKind.Local).AddTicks(3923),
                            DepartmentDescription = "IT",
                            IsActive = false,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2023, 12, 27, 12, 21, 56, 600, DateTimeKind.Local).AddTicks(3925),
                            DepartmentDescription = "Sağlık",
                            IsActive = false,
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("PMRU.Domain.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AppointmentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("IdentityNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LocationID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("PositionID")
                        .HasColumnType("int");

                    b.Property<string>("RegistrationNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("AppointmentId")
                        .IsUnique();

                    b.HasIndex("DepartmentID");

                    b.HasIndex("LocationID");

                    b.HasIndex("PositionID");

                    b.HasIndex("RoleID");

                    b.ToTable("Employees");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Employee");

                    b.UseTphMappingStrategy();

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AppointmentId = 0,
                            CreatedDate = new DateTime(2023, 12, 27, 12, 21, 56, 602, DateTimeKind.Local).AddTicks(999),
                            DepartmentID = 4,
                            Email = "ahmet.yilmaz@email.com",
                            IdentityNumber = "5555123456",
                            IsActive = true,
                            IsDeleted = false,
                            LocationID = 34,
                            Name = "Ahmet",
                            Phone = "(555) 512-3456",
                            PositionID = 4,
                            RegistrationNumber = "100",
                            RoleID = 4,
                            Surname = "Yılmaz"
                        },
                        new
                        {
                            Id = 2,
                            AppointmentId = 0,
                            CreatedDate = new DateTime(2023, 12, 27, 12, 21, 56, 602, DateTimeKind.Local).AddTicks(1003),
                            DepartmentID = 4,
                            Email = "ayse.kaya@email.com",
                            IdentityNumber = "5555234567",
                            IsActive = true,
                            IsDeleted = false,
                            LocationID = 41,
                            Name = "Ayşe",
                            Phone = "(555) 523-4567",
                            PositionID = 3,
                            RegistrationNumber = "101",
                            RoleID = 4,
                            Surname = "Kaya"
                        });
                });

            modelBuilder.Entity("PMRU.Domain.Entities.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocationCenter")
                        .HasColumnType("bit");

                    b.Property<string>("LocationDescription")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = 34,
                            CreatedDate = new DateTime(2023, 12, 27, 12, 21, 56, 602, DateTimeKind.Local).AddTicks(1693),
                            IsActive = false,
                            IsDeleted = false,
                            IsLocationCenter = true,
                            LocationDescription = "Genel Müdürlük"
                        },
                        new
                        {
                            Id = 35,
                            CreatedDate = new DateTime(2023, 12, 27, 12, 21, 56, 602, DateTimeKind.Local).AddTicks(1696),
                            IsActive = false,
                            IsDeleted = false,
                            IsLocationCenter = false,
                            LocationDescription = "İzmir"
                        },
                        new
                        {
                            Id = 41,
                            CreatedDate = new DateTime(2023, 12, 27, 12, 21, 56, 602, DateTimeKind.Local).AddTicks(1698),
                            IsActive = false,
                            IsDeleted = false,
                            IsLocationCenter = false,
                            LocationDescription = "İzmit"
                        },
                        new
                        {
                            Id = 72,
                            CreatedDate = new DateTime(2023, 12, 27, 12, 21, 56, 602, DateTimeKind.Local).AddTicks(1700),
                            IsActive = false,
                            IsDeleted = false,
                            IsLocationCenter = false,
                            LocationDescription = "Batman"
                        },
                        new
                        {
                            Id = 71,
                            CreatedDate = new DateTime(2023, 12, 27, 12, 21, 56, 602, DateTimeKind.Local).AddTicks(1701),
                            IsActive = false,
                            IsDeleted = false,
                            IsLocationCenter = false,
                            LocationDescription = "Kırıkkale"
                        });
                });

            modelBuilder.Entity("PMRU.Domain.Entities.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("PositionDescription")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Positions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 12, 27, 12, 21, 56, 602, DateTimeKind.Local).AddTicks(2225),
                            IsActive = false,
                            IsDeleted = false,
                            PositionDescription = "Güvenlik Şefi"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 12, 27, 12, 21, 56, 602, DateTimeKind.Local).AddTicks(2227),
                            IsActive = false,
                            IsDeleted = false,
                            PositionDescription = "Güvenlik Görevlisi"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2023, 12, 27, 12, 21, 56, 602, DateTimeKind.Local).AddTicks(2228),
                            IsActive = false,
                            IsDeleted = false,
                            PositionDescription = "Elektrik Mühendisi"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2023, 12, 27, 12, 21, 56, 602, DateTimeKind.Local).AddTicks(2230),
                            IsActive = false,
                            IsDeleted = false,
                            PositionDescription = "Makine Mühendisi"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2023, 12, 27, 12, 21, 56, 602, DateTimeKind.Local).AddTicks(2231),
                            IsActive = false,
                            IsDeleted = false,
                            PositionDescription = "Muhasebe Uzmanı"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2023, 12, 27, 12, 21, 56, 602, DateTimeKind.Local).AddTicks(2233),
                            IsActive = false,
                            IsDeleted = false,
                            PositionDescription = "Personel Uzmanı"
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2023, 12, 27, 12, 21, 56, 602, DateTimeKind.Local).AddTicks(2234),
                            IsActive = false,
                            IsDeleted = false,
                            PositionDescription = "İnsan Kaynakları Uzmanı"
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2023, 12, 27, 12, 21, 56, 602, DateTimeKind.Local).AddTicks(2236),
                            IsActive = false,
                            IsDeleted = false,
                            PositionDescription = "Yazılım Geliştirici"
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2023, 12, 27, 12, 21, 56, 602, DateTimeKind.Local).AddTicks(2238),
                            IsActive = false,
                            IsDeleted = false,
                            PositionDescription = "Test Uzmanı"
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2023, 12, 27, 12, 21, 56, 602, DateTimeKind.Local).AddTicks(2240),
                            IsActive = false,
                            IsDeleted = false,
                            PositionDescription = "Finans Uzmanı"
                        },
                        new
                        {
                            Id = 11,
                            CreatedDate = new DateTime(2023, 12, 27, 12, 21, 56, 602, DateTimeKind.Local).AddTicks(2241),
                            IsActive = false,
                            IsDeleted = false,
                            PositionDescription = "Pazarlama Uzmanı"
                        },
                        new
                        {
                            Id = 12,
                            CreatedDate = new DateTime(2023, 12, 27, 12, 21, 56, 602, DateTimeKind.Local).AddTicks(2243),
                            IsActive = false,
                            IsDeleted = false,
                            PositionDescription = "Doktor"
                        },
                        new
                        {
                            Id = 13,
                            CreatedDate = new DateTime(2023, 12, 27, 12, 21, 56, 602, DateTimeKind.Local).AddTicks(2244),
                            IsActive = false,
                            IsDeleted = false,
                            PositionDescription = "Hemşire"
                        },
                        new
                        {
                            Id = 14,
                            CreatedDate = new DateTime(2023, 12, 27, 12, 21, 56, 602, DateTimeKind.Local).AddTicks(2246),
                            IsActive = false,
                            IsDeleted = false,
                            PositionDescription = "Satış Temsilcisi"
                        });
                });

            modelBuilder.Entity("PMRU.Domain.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("RoleDescription")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 12, 27, 12, 21, 56, 602, DateTimeKind.Local).AddTicks(2750),
                            IsActive = false,
                            IsDeleted = false,
                            RoleDescription = "SystemAdmin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 12, 27, 12, 21, 56, 602, DateTimeKind.Local).AddTicks(2752),
                            IsActive = false,
                            IsDeleted = false,
                            RoleDescription = "LocalAdmin"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2023, 12, 27, 12, 21, 56, 602, DateTimeKind.Local).AddTicks(2754),
                            IsActive = false,
                            IsDeleted = false,
                            RoleDescription = "Doctor"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2023, 12, 27, 12, 21, 56, 602, DateTimeKind.Local).AddTicks(2756),
                            IsActive = false,
                            IsDeleted = false,
                            RoleDescription = "Employee"
                        });
                });

            modelBuilder.Entity("PMRU.Domain.Entities.Doctor", b =>
                {
                    b.HasBaseType("PMRU.Domain.Entities.Employee");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasDiscriminator().HasValue("Doctor");

                    b.HasData(
                        new
                        {
                            Id = 3,
                            AppointmentId = 0,
                            CreatedDate = new DateTime(2023, 12, 27, 12, 21, 56, 600, DateTimeKind.Local).AddTicks(8234),
                            DepartmentID = 7,
                            Email = "aylin.gunes@email.com",
                            IdentityNumber = "12345678901",
                            IsActive = false,
                            IsDeleted = false,
                            LocationID = 35,
                            Name = "Aylin",
                            Phone = "5556123456",
                            PositionID = 12,
                            RegistrationNumber = "102",
                            RoleID = 3,
                            Surname = "Güneş",
                            Password = "Password"
                        },
                        new
                        {
                            Id = 4,
                            AppointmentId = 0,
                            CreatedDate = new DateTime(2023, 12, 27, 12, 21, 56, 600, DateTimeKind.Local).AddTicks(8242),
                            DepartmentID = 7,
                            Email = "eren.akcay@email.com",
                            IdentityNumber = "12345678923",
                            IsActive = false,
                            IsDeleted = false,
                            LocationID = 41,
                            Name = "Eren",
                            Phone = "5556234567",
                            PositionID = 12,
                            RegistrationNumber = "103",
                            RoleID = 3,
                            Surname = "Akçay",
                            Password = "Password"
                        });
                });

            modelBuilder.Entity("PMRU.Domain.Entities.Appointment", b =>
                {
                    b.HasOne("PMRU.Domain.Entities.Doctor", "Doctor")
                        .WithMany("Appointments")
                        .HasForeignKey("DoctorID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Doctor");
                });

            modelBuilder.Entity("PMRU.Domain.Entities.Availability", b =>
                {
                    b.HasOne("PMRU.Domain.Entities.Doctor", "Doctor")
                        .WithMany("Availabilities")
                        .HasForeignKey("DoctorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");
                });

            modelBuilder.Entity("PMRU.Domain.Entities.Employee", b =>
                {
                    b.HasOne("PMRU.Domain.Entities.Appointment", "Appointment")
                        .WithOne("Employee")
                        .HasForeignKey("PMRU.Domain.Entities.Employee", "AppointmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PMRU.Domain.Entities.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PMRU.Domain.Entities.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PMRU.Domain.Entities.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PMRU.Domain.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Appointment");

                    b.Navigation("Department");

                    b.Navigation("Location");

                    b.Navigation("Position");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("PMRU.Domain.Entities.Appointment", b =>
                {
                    b.Navigation("Employee")
                        .IsRequired();
                });

            modelBuilder.Entity("PMRU.Domain.Entities.Doctor", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("Availabilities");
                });
#pragma warning restore 612, 618
        }
    }
}
